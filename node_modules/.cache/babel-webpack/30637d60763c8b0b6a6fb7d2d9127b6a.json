{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet MyTweetsComponent = class MyTweetsComponent {\n  constructor(loginService, fb, tweetService) {\n    this.loginService = loginService;\n    this.fb = fb;\n    this.tweetService = tweetService;\n  }\n\n  ngOnInit() {\n    const loginId = localStorage.getItem('loginId') == null ? '' : localStorage.getItem('loginId');\n\n    if (loginId != null) {\n      this.getTweetsByUserName(loginId);\n    }\n\n    this.tweetUpdate = this.fb.group({\n      tweetText: ['', [Validators.required]]\n    });\n  }\n\n  getTweetsByUserName(username) {\n    this.tweetService.showMyTweets(username).subscribe(data => {\n      this.othersTweets = data;\n      this.tweetsLength = this.othersTweets.length;\n    });\n  }\n\n  likeTweet(tweetId) {\n    const loginId = localStorage.getItem('loginId') == null ? '' : localStorage.getItem('loginId');\n\n    if (loginId != null) {\n      this.tweetService.addLike(loginId, tweetId).subscribe(data => {\n        this.getTweetsByUserName(loginId);\n      }, err => {\n        alert(err.message);\n      });\n    }\n  }\n\n  editTweet() {\n    const loginId = localStorage.getItem('loginId') == null ? '' : localStorage.getItem('loginId');\n\n    if (loginId != null) {\n      const newUpdatedTweet = {\n        tweetText: this.updateTweetText\n      };\n      this.tweetService.updateTweet(loginId, this.tweetId, newUpdatedTweet).subscribe(data => {\n        this.getTweetsByUserName(loginId);\n      });\n    }\n  }\n\n  deleteTweet(tweetId) {\n    const loginId = localStorage.getItem('loginId') == null ? '' : localStorage.getItem('loginId');\n\n    if (loginId != null) {\n      this.tweetService.deleteTweet(loginId, tweetId).subscribe(data => {\n        this.getTweetsByUserName(loginId);\n      }, err => {\n        alert(err.message);\n      });\n    }\n  }\n\n  onEditTweetModal(tempTweetId) {\n    this.tweetService.showMyTweetsById(tempTweetId).subscribe(data => {\n      data.forEach(element => {\n        this.updateTweetText = element.tweetText;\n      });\n    });\n    this.tweetId = tempTweetId;\n    const container = document.getElementById('main-container');\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.style.display = 'none';\n    button.setAttribute('data-toggle', 'modal');\n    button.setAttribute('data-target', '#editTweetModal');\n    container === null || container === void 0 ? void 0 : container.appendChild(button);\n    button.click();\n  }\n\n};\nMyTweetsComponent = __decorate([Component({\n  selector: 'app-my-tweets',\n  templateUrl: './my-tweets.component.html',\n  styleUrls: ['./my-tweets.component.css']\n})], MyTweetsComponent);\nexport { MyTweetsComponent };","map":null,"metadata":{},"sourceType":"module"}